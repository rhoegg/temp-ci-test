<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
	http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
	http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
    <sub-flow name="addVitalSign">
        <db:insert doc:name="vital_signs" doc:id="ratski" config-ref="seconds-save-lives-db-config" target="insertResult" autoGenerateKeys="true" autoGeneratedKeysColumnNames='#[["vital_id", "created_at"]]'>
            <db:sql><![CDATA[INSERT INTO vital_signs (
    er_id,
    recorded_at,
    heart_rate,
    blood_pressure_systolic,
    blood_pressure_diastolic,
    blood_oxygen,
    temperature,
    respiratory_rate,
    source,
    device_id,
    connectivity_type,
    notes,
    created_at
  )
VALUES (
    :emergencyResponseId,
    :recorded,
    :heartRate,
    :bloodPressureSystolic,
    :bloodPressureDiastolic,
    :bloodOxygen,
    :temperature,
    :respiratoryRate,
    :source,
    :deviceId,
    :connectivityType,
    :notes,
    NOW()
  );]]></db:sql>
            <db:input-parameters><![CDATA[#[{
  emergencyResponseId: payload.emergencyResponseId,
  recorded: payload.recorded as DateTime { class: "java.sql.Date" },
  heartRate: payload.vitals.heartRate,
  bloodPressureSystolic: payload.vitals.bloodPressure.systolic,
  bloodPressureDiastolic: payload.vitals.bloodPressure.diastolic,
  bloodOxygen: payload.vitals.bloodOxygen,
  temperature: payload.vitals.temperature,
  respiratoryRate: payload.vitals.respiratoryRate,
  source: payload.source,
  deviceId: null,
  connectivityType: null,
  notes: null,
}]]]></db:input-parameters>        
        </db:insert>
        <logger doc:name="Logger" doc:id="uqawbd" message="#[output application/json
---
vars.insertResult]"/>
        <ee:transform doc:name="response" doc:id="ksqlev" >
            <ee:message >
                <ee:set-payload doc:name="Set payload" doc:id="vgdfoi" ><![CDATA[%dw 2.0
output application/json
var newRecordId = vars.insertResult.generatedKeys.vital_id
---
payload - "vitals" ++ {
    id: newRecordId
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </sub-flow>
	<sub-flow name="getVitalSign" doc:id="deab9f52-1779-4783-8aa5-14baf947111b" >
		<db:query-single doc:name="vital_signs" doc:id="0b2794eb-605a-4ba8-be2e-a5e9dd3b9ea7" config-ref="seconds-save-lives-db-config">
			<db:sql ><![CDATA[select *
from vital_signs
where vital_id = :vitalId]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	vitalId: attributes.uriParams.id
}]]]></db:input-parameters>
		</db:query-single>
		<ee:transform doc:name="response" doc:id="b1936b25-49cf-41cd-8da2-9429a660a071" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	id: payload.vital_id,
	emergencyResponseId: payload.er_id,
	source: payload.source,
	recorded: payload.recorded_at as String {format: "yyyy-MM-ddTHH:mm:ss.SSSZ"}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
</mule>
